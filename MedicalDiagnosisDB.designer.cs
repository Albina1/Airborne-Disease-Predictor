#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FInal_project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MedicalDiagonsisDB")]
	public partial class MedicalDiagnosisDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdminPanel2(AdminPanel2 instance);
    partial void UpdateAdminPanel2(AdminPanel2 instance);
    partial void DeleteAdminPanel2(AdminPanel2 instance);
    partial void InsertDiagnosisDisease(DiagnosisDisease instance);
    partial void UpdateDiagnosisDisease(DiagnosisDisease instance);
    partial void DeleteDiagnosisDisease(DiagnosisDisease instance);
    partial void InsertMedicineDetail(MedicineDetail instance);
    partial void UpdateMedicineDetail(MedicineDetail instance);
    partial void DeleteMedicineDetail(MedicineDetail instance);
    partial void InsertPatientDetail(PatientDetail instance);
    partial void UpdatePatientDetail(PatientDetail instance);
    partial void DeletePatientDetail(PatientDetail instance);
    partial void InsertProbability_of_disease(Probability_of_disease instance);
    partial void UpdateProbability_of_disease(Probability_of_disease instance);
    partial void DeleteProbability_of_disease(Probability_of_disease instance);
    partial void InsertSymptom_selected(Symptom_selected instance);
    partial void UpdateSymptom_selected(Symptom_selected instance);
    partial void DeleteSymptom_selected(Symptom_selected instance);
    #endregion
		
		public MedicalDiagnosisDBDataContext() : 
				base(global::FInal_project.Properties.Settings.Default.MedicalDiagonsisDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MedicalDiagnosisDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MedicalDiagnosisDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MedicalDiagnosisDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MedicalDiagnosisDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminPanel2> AdminPanel2s
		{
			get
			{
				return this.GetTable<AdminPanel2>();
			}
		}
		
		public System.Data.Linq.Table<DiagnosisDisease> DiagnosisDiseases
		{
			get
			{
				return this.GetTable<DiagnosisDisease>();
			}
		}
		
		public System.Data.Linq.Table<MedicineDetail> MedicineDetails
		{
			get
			{
				return this.GetTable<MedicineDetail>();
			}
		}
		
		public System.Data.Linq.Table<PatientDetail> PatientDetails
		{
			get
			{
				return this.GetTable<PatientDetail>();
			}
		}
		
		public System.Data.Linq.Table<Probability_of_disease> Probability_of_diseases
		{
			get
			{
				return this.GetTable<Probability_of_disease>();
			}
		}
		
		public System.Data.Linq.Table<Symptom_selected> Symptom_selecteds
		{
			get
			{
				return this.GetTable<Symptom_selected>();
			}
		}
		
		public System.Data.Linq.Table<influenzaDisease> influenzaDiseases
		{
			get
			{
				return this.GetTable<influenzaDisease>();
			}
		}
		
		public System.Data.Linq.Table<measlesDisease> measlesDiseases
		{
			get
			{
				return this.GetTable<measlesDisease>();
			}
		}
		
		public System.Data.Linq.Table<mumps_Disease> mumps_Diseases
		{
			get
			{
				return this.GetTable<mumps_Disease>();
			}
		}
		
		public System.Data.Linq.Table<tubuerculosisDisease> tubuerculosisDiseases
		{
			get
			{
				return this.GetTable<tubuerculosisDisease>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminPanel2")]
	public partial class AdminPanel2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _username;
		
		private string _password;
		
		private string _contact;
		
		private string _first_name;
		
		private string _middle_name;
		
		private string _Last_name;
		
		private string _email_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onmiddle_nameChanging(string value);
    partial void Onmiddle_nameChanged();
    partial void OnLast_nameChanging(string value);
    partial void OnLast_nameChanged();
    partial void Onemail_IDChanging(string value);
    partial void Onemail_IDChanged();
    #endregion
		
		public AdminPanel2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middle_name", DbType="VarChar(50)")]
		public string middle_name
		{
			get
			{
				return this._middle_name;
			}
			set
			{
				if ((this._middle_name != value))
				{
					this.Onmiddle_nameChanging(value);
					this.SendPropertyChanging();
					this._middle_name = value;
					this.SendPropertyChanged("middle_name");
					this.Onmiddle_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Last_name
		{
			get
			{
				return this._Last_name;
			}
			set
			{
				if ((this._Last_name != value))
				{
					this.OnLast_nameChanging(value);
					this.SendPropertyChanging();
					this._Last_name = value;
					this.SendPropertyChanged("Last_name");
					this.OnLast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email_ID
		{
			get
			{
				return this._email_ID;
			}
			set
			{
				if ((this._email_ID != value))
				{
					this.Onemail_IDChanging(value);
					this.SendPropertyChanging();
					this._email_ID = value;
					this.SendPropertyChanged("email_ID");
					this.Onemail_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiagnosisDisease")]
	public partial class DiagnosisDisease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientID;
		
		private string _symptom;
		
		private int _sn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientIDChanging(int value);
    partial void OnpatientIDChanged();
    partial void OnsymptomChanging(string value);
    partial void OnsymptomChanged();
    partial void OnsnChanging(int value);
    partial void OnsnChanged();
    #endregion
		
		public DiagnosisDisease()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientID", DbType="Int NOT NULL")]
		public int patientID
		{
			get
			{
				return this._patientID;
			}
			set
			{
				if ((this._patientID != value))
				{
					this.OnpatientIDChanging(value);
					this.SendPropertyChanging();
					this._patientID = value;
					this.SendPropertyChanged("patientID");
					this.OnpatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symptom", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string symptom
		{
			get
			{
				return this._symptom;
			}
			set
			{
				if ((this._symptom != value))
				{
					this.OnsymptomChanging(value);
					this.SendPropertyChanging();
					this._symptom = value;
					this.SendPropertyChanged("symptom");
					this.OnsymptomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sn", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sn
		{
			get
			{
				return this._sn;
			}
			set
			{
				if ((this._sn != value))
				{
					this.OnsnChanging(value);
					this.SendPropertyChanging();
					this._sn = value;
					this.SendPropertyChanged("sn");
					this.OnsnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicineDetail")]
	public partial class MedicineDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MedicineID;
		
		private string _DiseaseName;
		
		private string _MedicineName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicineIDChanging(int value);
    partial void OnMedicineIDChanged();
    partial void OnDiseaseNameChanging(string value);
    partial void OnDiseaseNameChanged();
    partial void OnMedicineNameChanging(string value);
    partial void OnMedicineNameChanged();
    #endregion
		
		public MedicineDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MedicineID
		{
			get
			{
				return this._MedicineID;
			}
			set
			{
				if ((this._MedicineID != value))
				{
					this.OnMedicineIDChanging(value);
					this.SendPropertyChanging();
					this._MedicineID = value;
					this.SendPropertyChanged("MedicineID");
					this.OnMedicineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiseaseName", DbType="VarChar(50)")]
		public string DiseaseName
		{
			get
			{
				return this._DiseaseName;
			}
			set
			{
				if ((this._DiseaseName != value))
				{
					this.OnDiseaseNameChanging(value);
					this.SendPropertyChanging();
					this._DiseaseName = value;
					this.SendPropertyChanged("DiseaseName");
					this.OnDiseaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="VarChar(350)")]
		public string MedicineName
		{
			get
			{
				return this._MedicineName;
			}
			set
			{
				if ((this._MedicineName != value))
				{
					this.OnMedicineNameChanging(value);
					this.SendPropertyChanging();
					this._MedicineName = value;
					this.SendPropertyChanged("MedicineName");
					this.OnMedicineNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientDetail")]
	public partial class PatientDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientID;
		
		private string _patient_fname;
		
		private string _patient_middlename;
		
		private string _patient_lname;
		
		private string _gender;
		
		private string _age;
		
		private string _contactnum;
		
		private string _bloodgroup;
		
		private string _city;
		
		private string _zone;
		
		private string _diseasefound;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientIDChanging(int value);
    partial void OnpatientIDChanged();
    partial void Onpatient_fnameChanging(string value);
    partial void Onpatient_fnameChanged();
    partial void Onpatient_middlenameChanging(string value);
    partial void Onpatient_middlenameChanged();
    partial void Onpatient_lnameChanging(string value);
    partial void Onpatient_lnameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnageChanging(string value);
    partial void OnageChanged();
    partial void OncontactnumChanging(string value);
    partial void OncontactnumChanged();
    partial void OnbloodgroupChanging(string value);
    partial void OnbloodgroupChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnzoneChanging(string value);
    partial void OnzoneChanged();
    partial void OndiseasefoundChanging(string value);
    partial void OndiseasefoundChanged();
    #endregion
		
		public PatientDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patientID
		{
			get
			{
				return this._patientID;
			}
			set
			{
				if ((this._patientID != value))
				{
					this.OnpatientIDChanging(value);
					this.SendPropertyChanging();
					this._patientID = value;
					this.SendPropertyChanged("patientID");
					this.OnpatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_fname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string patient_fname
		{
			get
			{
				return this._patient_fname;
			}
			set
			{
				if ((this._patient_fname != value))
				{
					this.Onpatient_fnameChanging(value);
					this.SendPropertyChanging();
					this._patient_fname = value;
					this.SendPropertyChanged("patient_fname");
					this.Onpatient_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_middlename", DbType="VarChar(50)")]
		public string patient_middlename
		{
			get
			{
				return this._patient_middlename;
			}
			set
			{
				if ((this._patient_middlename != value))
				{
					this.Onpatient_middlenameChanging(value);
					this.SendPropertyChanging();
					this._patient_middlename = value;
					this.SendPropertyChanged("patient_middlename");
					this.Onpatient_middlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_lname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string patient_lname
		{
			get
			{
				return this._patient_lname;
			}
			set
			{
				if ((this._patient_lname != value))
				{
					this.Onpatient_lnameChanging(value);
					this.SendPropertyChanging();
					this._patient_lname = value;
					this.SendPropertyChanged("patient_lname");
					this.Onpatient_lnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactnum", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contactnum
		{
			get
			{
				return this._contactnum;
			}
			set
			{
				if ((this._contactnum != value))
				{
					this.OncontactnumChanging(value);
					this.SendPropertyChanging();
					this._contactnum = value;
					this.SendPropertyChanged("contactnum");
					this.OncontactnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloodgroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string bloodgroup
		{
			get
			{
				return this._bloodgroup;
			}
			set
			{
				if ((this._bloodgroup != value))
				{
					this.OnbloodgroupChanging(value);
					this.SendPropertyChanging();
					this._bloodgroup = value;
					this.SendPropertyChanged("bloodgroup");
					this.OnbloodgroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnzoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("zone");
					this.OnzoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diseasefound", DbType="VarChar(50)")]
		public string diseasefound
		{
			get
			{
				return this._diseasefound;
			}
			set
			{
				if ((this._diseasefound != value))
				{
					this.OndiseasefoundChanging(value);
					this.SendPropertyChanging();
					this._diseasefound = value;
					this.SendPropertyChanged("diseasefound");
					this.OndiseasefoundChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Probability_of_disease")]
	public partial class Probability_of_disease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patient_id;
		
		private double _measles_probability;
		
		private double _influenza_probability;
		
		private double _tuberculosis_probability;
		
		private double _mumps_probability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Onmeasles_probabilityChanging(double value);
    partial void Onmeasles_probabilityChanged();
    partial void Oninfluenza_probabilityChanging(double value);
    partial void Oninfluenza_probabilityChanged();
    partial void Ontuberculosis_probabilityChanging(double value);
    partial void Ontuberculosis_probabilityChanged();
    partial void Onmumps_probabilityChanging(double value);
    partial void Onmumps_probabilityChanged();
    #endregion
		
		public Probability_of_disease()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measles_probability", DbType="Float NOT NULL")]
		public double measles_probability
		{
			get
			{
				return this._measles_probability;
			}
			set
			{
				if ((this._measles_probability != value))
				{
					this.Onmeasles_probabilityChanging(value);
					this.SendPropertyChanging();
					this._measles_probability = value;
					this.SendPropertyChanged("measles_probability");
					this.Onmeasles_probabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_influenza_probability", DbType="Float NOT NULL")]
		public double influenza_probability
		{
			get
			{
				return this._influenza_probability;
			}
			set
			{
				if ((this._influenza_probability != value))
				{
					this.Oninfluenza_probabilityChanging(value);
					this.SendPropertyChanging();
					this._influenza_probability = value;
					this.SendPropertyChanged("influenza_probability");
					this.Oninfluenza_probabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tuberculosis_probability", DbType="Float NOT NULL")]
		public double tuberculosis_probability
		{
			get
			{
				return this._tuberculosis_probability;
			}
			set
			{
				if ((this._tuberculosis_probability != value))
				{
					this.Ontuberculosis_probabilityChanging(value);
					this.SendPropertyChanging();
					this._tuberculosis_probability = value;
					this.SendPropertyChanged("tuberculosis_probability");
					this.Ontuberculosis_probabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mumps_probability", DbType="Float NOT NULL")]
		public double mumps_probability
		{
			get
			{
				return this._mumps_probability;
			}
			set
			{
				if ((this._mumps_probability != value))
				{
					this.Onmumps_probabilityChanging(value);
					this.SendPropertyChanging();
					this._mumps_probability = value;
					this.SendPropertyChanged("mumps_probability");
					this.Onmumps_probabilityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Symptom_selected")]
	public partial class Symptom_selected : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patient_id;
		
		private string _symptom_list;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Onsymptom_listChanging(string value);
    partial void Onsymptom_listChanged();
    #endregion
		
		public Symptom_selected()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_symptom_list", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string symptom_list
		{
			get
			{
				return this._symptom_list;
			}
			set
			{
				if ((this._symptom_list != value))
				{
					this.Onsymptom_listChanging(value);
					this.SendPropertyChanging();
					this._symptom_list = value;
					this.SendPropertyChanged("symptom_list");
					this.Onsymptom_listChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.influenzaDisease")]
	public partial class influenzaDisease
	{
		
		private int _influenza_list;
		
		private string _influenza_symptom;
		
		public influenzaDisease()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[influenza list]", Storage="_influenza_list", DbType="Int NOT NULL")]
		public int influenza_list
		{
			get
			{
				return this._influenza_list;
			}
			set
			{
				if ((this._influenza_list != value))
				{
					this._influenza_list = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[influenza symptom]", Storage="_influenza_symptom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string influenza_symptom
		{
			get
			{
				return this._influenza_symptom;
			}
			set
			{
				if ((this._influenza_symptom != value))
				{
					this._influenza_symptom = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.measlesDisease")]
	public partial class measlesDisease
	{
		
		private int _measles_list;
		
		private string _measles_symptoms;
		
		public measlesDisease()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[measles list]", Storage="_measles_list", DbType="Int NOT NULL")]
		public int measles_list
		{
			get
			{
				return this._measles_list;
			}
			set
			{
				if ((this._measles_list != value))
				{
					this._measles_list = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[measles symptoms]", Storage="_measles_symptoms", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string measles_symptoms
		{
			get
			{
				return this._measles_symptoms;
			}
			set
			{
				if ((this._measles_symptoms != value))
				{
					this._measles_symptoms = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[mumps Disease]")]
	public partial class mumps_Disease
	{
		
		private int _mumps_list;
		
		private string _mumps_symptom;
		
		public mumps_Disease()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[mumps list]", Storage="_mumps_list", DbType="Int NOT NULL")]
		public int mumps_list
		{
			get
			{
				return this._mumps_list;
			}
			set
			{
				if ((this._mumps_list != value))
				{
					this._mumps_list = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[mumps symptom]", Storage="_mumps_symptom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mumps_symptom
		{
			get
			{
				return this._mumps_symptom;
			}
			set
			{
				if ((this._mumps_symptom != value))
				{
					this._mumps_symptom = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tubuerculosisDisease")]
	public partial class tubuerculosisDisease
	{
		
		private int _tuberculosis_list;
		
		private string _tuberculosis_symptoms;
		
		public tubuerculosisDisease()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[tuberculosis list]", Storage="_tuberculosis_list", DbType="Int NOT NULL")]
		public int tuberculosis_list
		{
			get
			{
				return this._tuberculosis_list;
			}
			set
			{
				if ((this._tuberculosis_list != value))
				{
					this._tuberculosis_list = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[tuberculosis symptoms]", Storage="_tuberculosis_symptoms", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tuberculosis_symptoms
		{
			get
			{
				return this._tuberculosis_symptoms;
			}
			set
			{
				if ((this._tuberculosis_symptoms != value))
				{
					this._tuberculosis_symptoms = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
